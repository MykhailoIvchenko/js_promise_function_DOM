{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","myPromise","Promise","resolve","addEventListener","message","nodeName","id","printMessage","pageBody","document","querySelector","notification","createElement","classList","add","innerHTML","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAajBC,OAFW,IAAIC,QAVL,SAACC,GAChBJ,EAAQK,iBAAiBJ,EAAW,WAC5BK,IAAAA,EACF,UAAUL,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQO,SACxCP,MAAAA,OAAAA,OAAAA,EAAQQ,IAEZJ,OAAAA,EAAQE,OASrB,IAAMG,EAAe,SAACH,GACdI,IAAAA,EAAWC,SAASC,cAAc,QAElCC,EAAeF,SAASG,cAAc,OAE5CD,EAAaE,UAAUC,IAAI,WAE3BH,EAAaI,UAAYX,EAEzBI,EAASQ,OAAOL,IAGlBM,OAAOC,QAAU,CACfrB,QAAAA,EACAU,aAAAA","file":"main.577d8439.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const resolver = (resolve) => {\n    element.addEventListener(eventName, () => {\n      const message\n        = `It was ${eventName} on the element: ${element.nodeName}, `\n        + `id: ${element.id}`;\n\n      return resolve(message);\n    });\n  };\n\n  const myPromise = new Promise(resolver);\n\n  return myPromise;\n}\n\nconst printMessage = (message) => {\n  const pageBody = document.querySelector('body');\n\n  const notification = document.createElement('div');\n\n  notification.classList.add('message');\n\n  notification.innerHTML = message;\n\n  pageBody.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}